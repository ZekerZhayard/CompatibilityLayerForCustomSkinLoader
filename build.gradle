buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "covertdragon"
            url = "https://maven.covertdragon.team/repository/internal"
        }
        maven {
            name = "forge"
            url = "https://maven.minecraftforge.net"
        }
        maven {
            name = "gradle"
            url = "https://plugins.gradle.org/m2"
        }
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:1.2.2"
        classpath "gradle.plugin.com.matthewprenger:CurseGradle:1.4.0"
        //classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
    }
}

import io.github.zekerzhayard.cflcsl.gradle.DeobfPlugin
import io.github.zekerzhayard.cflcsl.gradle.unsafe.ClassModifierManager
import io.github.zekerzhayard.cflcsl.gradle.unsafe.modifiers.ProcessJarTaskModifier

ClassModifierManager.init()
ClassModifierManager.registerModifier(new ProcessJarTaskModifier())

apply plugin: "forge"
apply plugin: "com.matthewprenger.cursegradle"
apply plugin: DeobfPlugin
//apply plugin: "org.spongepowered.mixin"

version = "${mod_version}${-> getVersionSuffix()}"
group = "io.github.zekerzhayard" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = rootProject.name

static String getVersionSuffix() {
    if (System.getenv("IS_PUBLICATION") != null) {
        return ""
    } else if (System.getenv("GITHUB_RUN_NUMBER") != null && System.getenv("GITHUB_SHA") != null) {
        return "-build." + System.getenv("GITHUB_RUN_NUMBER") + "-" + System.getenv("GITHUB_SHA").substring(0, 7)
    }
    return "-LOCAL"
}

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "1.7.10-10.13.4.1614-1.7.10"
    mappings = "stable_12"
    runDir = "run"

    replace "@VERSION@", "${-> project.version}".toString()
    replace "@MODID@", "${-> project.name}".toString()
    if (System.getProperty("idea.active") == null) {
        replace "//@@//", ""
    }
}

//mixin {
//    add sourceSets.main, "mixins.${rootProject.name.toLowerCase(Locale.ENGLISH)}.refmap.json"
//}

repositories {
    maven {
        name = "sponge"
        url = "https://repo.spongepowered.org/repository/maven-public"
    }
    maven {
        name = "cursemaven"
        url = "https://www.cursemaven.com"
    }
    ivy {
        layout "pattern", {
            artifact "[organisation]/[artifact]-[revision](-[classifier])(.[ext])"
        }
        url = "https://csl.littleservice.cn/"
    }
}

dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
      
    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html
    compile "com.mojang:authlib:1.5.21"
    compile "curse.maven:mixinbootstraplegacy-609969:3748598"
    compile "org.spongepowered:mixin:0.8.5", {
        transitive = false
    }
    deobfCompile "mods:CustomSkinLoader_ForgeLegacy:14.14-SNAPSHOT-321"
    deobfCompileOnly "curse.maven:armourers-workshop-229523:3005075"
    deobfCompileOnly "curse.maven:cofh-core-69162:2388750"
    deobfCompileOnly "curse.maven:littlemaidmobx-221976:2273490"
    deobfCompileOnly extract.extract("curse.maven:mo-bends-231347:2242799", "MoBends-0.20.1 for MC 1.7.10.jar")
    deobfCompileOnly "curse.maven:openmodslib-228815:2765573"
    deobfCompileOnly "curse.maven:render-player-api-228981:2248933"
    deobfCompileOnly "curse.maven:the-twilight-forest-227639:3039937"
}

def refMap = "${tasks.compileJava.temporaryDir}" + File.separator + "mixins.${rootProject.name.toLowerCase(Locale.ENGLISH)}.refmap.json"

jar {
    from refMap

    manifest.attributes([
            "Specification-Title": "${rootProject.name}",
            "Specification-Vendor": "ZekerZhayard",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"ZekerZhayard",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
            "FMLCorePlugin": "${project.group}.${rootProject.name.toLowerCase(Locale.ENGLISH)}.asm.FMLLoadingPlugin",
            "FMLCorePluginContainsFMLMod": "true",
            "ForceLoadAsMod": "true",
            "MixinConfigs": "mixins.${rootProject.name.toLowerCase(Locale.ENGLISH)}.json",
            "ModSide": "CLIENT",
            "TweakClass": "org.spongepowered.asm.launch.MixinTweaker"
    ])
}

def mixinSrg = "${tasks.reobf.temporaryDir}" + File.separator + "mixins.srg"
afterEvaluate {
    tasks.compileJava.options.compilerArgs += ["-AreobfSrgFile=${tasks.reobf.srg}", "-AoutSrgFile=${mixinSrg}", "-AoutRefMapFile=${refMap}"]
}

reobf {
    addExtraSrgFile mixinSrg
    reobf (jar) { reobfSpec ->
        reobfSpec.classpath = sourceSets.main.compileClasspath
    }
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

def apiKey = System.getenv("CURSEFORGE_API_KEY")

if (apiKey != null) {
    curseforge {
        curseforge.apiKey = apiKey
        project {
            id = "404263"
            releaseType = "alpha"
            mainArtifact jar, {
                displayName = "${archivesBaseName}-${version}"
            }
            addGameVersion "1.7.10"
            addGameVersion "Forge"
        }
    }
}
